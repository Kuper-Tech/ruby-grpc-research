x-app-resources: &x-app-resources
  deploy:
    resources:
      reservations:
        cpus: '0.25'
        memory: 256M
      limits:
        cpus: '0.25'
        memory: 256M

x-app-service-template: &ruby-app
  image: ruby-with-nghttp2:0.1
  build:
    dockerfile: Dockerfile
  environment:
    DS9_USE_SYSTEM_LIBRARIES: "1"
    HISTFILE: /app/tmp/.bash_history
    BUNDLE_PATH: /usr/local/bundle
    BUNDLE_CONFIG: /app/.bundle/config
    prometheus_multiproc_dir: ./tmp
  stdin_open: true
  tty: true
  working_dir: /app
  tmpfs:
    - /tmp

services:
  ruby:
    <<:
      - *ruby-app
      - *x-app-resources
    command: bash
    volumes:
      - bundler_data:/usr/local/bundle
      - .:/app:cached

  gruf:
    <<:
      - *ruby-app
      - *x-app-resources
    command: bundle exec ruby server.rb
    volumes:
      - ./gruf:/app:cached
      - ./shared:/shared:cached
      - bundler_data:/usr/local/bundle

  griffin:
    <<:
      - *ruby-app
      - *x-app-resources
    command:  bundle exec ruby server.rb
    volumes:
      - ./griffin:/app:cached
      - ./shared:/shared:cached
      - bundler_data:/usr/local/bundle

  grpc:
    <<:
      - *ruby-app
      - *x-app-resources
    command: bundle exec ruby server.rb
    volumes:
      - ./grpc:/app:cached
      - ./shared:/shared:cached
      - bundler_data:/usr/local/bundle

  grpc-multi:
    <<:
      - *ruby-app
      - *x-app-resources
    command: bundle exec ruby server_multi.rb
    volumes:
      - ./grpc:/app:cached
      - ./shared:/shared:cached
      - bundler_data:/usr/local/bundle

  falcon:
    <<:
      - *ruby-app
      - *x-app-resources
    command: bundle exec falcon host
    volumes:
      - ./falcon:/app:cached
      - ./shared:/shared:cached
      - bundler_data:/usr/local/bundle

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
      args:
        NGINX_VERSION: "1.27.2"
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
    depends_on:
      - gruf

  client:
    <<: *ruby-app
    command: bundle exec puma -t 8 -w 8 -C puma.rb
    volumes:
      - ./client-app:/app:cached
      - ./shared:/shared:cached
      - bundler_data:/usr/local/bundle

  prometheus:
    image: prom/prometheus:v2.17.1
    container_name: prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    expose:
      - 9090
    depends_on:
     - client

  grafana:
    image: grafana/grafana:11.2.2-security-01
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    ports:
     - "3000:3000"
    depends_on:
     - prometheus

  k6:
    image: grafana/k6
    command: run /app/k6_test_grpc.js
    profiles: [manual-run]
    volumes:
      - .:/app:cached
    sysctls:
      - net.ipv4.tcp_tw_reuse=1

  grpcurl:
    image: fullstorydev/grpcurl
    profiles: [manual-run]
    volumes:
      - .:/app:cached
    command: >
      -plaintext -proto hello.proto -import-path /app/shared/proto -d '{"name": "Dmitry"}' gruf:9091 hello.Greeter/SayHello

  rust-tonic:
    image: rust-with-protobuf:0.2
    build:
      dockerfile: rust-tonic/Dockerfile
    working_dir: /app/rust-tonic
    environment:
      CARGO_HOME: /usr/cargo
    volumes:
      - .:/app:cached
      - cargo_data:/usr/cargo
    command: >
      cargo run

  go-grpc:
    image: go-grpc:0.1
    build:
      context: ./go-grpc
      dockerfile: Dockerfile

volumes:
  bundler_data:
  cargo_data:
  prometheus_data:
  grafana_data:
